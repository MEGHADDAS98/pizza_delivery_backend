openapi: 3.0.0

info:
  title: Your API Title
  version: 1.0.0
  description: |
    A short description of your API.
    This API allows clients to perform various operations.
    Please refer to individual endpoints for more details.

servers:
  - url: https://api.example.com/{basePath}
    description: |
      Primary production server.
      All requests are routed through this server.
    variables:
      basePath:
        default: v1
        description: |
          Base path for all endpoints.
          Change this value to switch API versions.

security:
  - XAPIKey: []
  - XAPISecret: []

paths:
  /api/your-path:
    post:
      operationId: createSomething
      summary: Create something
      description: |
        Performs creation of “something” in the system.
        This endpoint accepts a request payload and creates a new resource.
        Use this endpoint to add new entries to the system.
      x-intent: |
        User wants to create something.
        Example scenarios include adding new items, resources, or records.
        Example questions:
          - How can I create a new item?
          - Please add a new item for me.
          - I want to create something in my account.
      x-trigger-phrases:
        - "create something"
        - "make a new item"
      x-contextual-guidance:
        - "Ensure user is authenticated"
      x-usage-guidance:
        - "Use this endpoint to add new entries"
      requestBody:
        $ref: '#/components/requestBodies/UserRequest'
      responses:
        '200':
          description: |
            Successful response.
            Returns the created resource and status information.

components:
  requestBodies:
    UserRequest:
      description: |
        Payload for creating “something”.
        This object must include the necessary fields to create a new entity.
        Refer to the schema for required properties.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserRequest'
          examples:
            sample:
              summary: A sample request
              value:
                name: "Alice"
                age: 30

  schemas:
    UserRequest:
      type: object
      description: |
        Request payload for creating a new user or entity.
        Includes all required properties for successful creation.
      properties:
        name:
          type: string
          description: |
            Name of the user or entity.
            This field is required.
        age:
          type: integer
          description: |
            Age of the user or entity.
            This field is required and must be a valid integer.
      required:
        - name
        - age

    APIResponse:
      type: object
      description: |
        Wrapper for all responses.
        Contains the response data, original request, status, and type of response.
      properties:
        data:
          $ref: '#/components/schemas/SomeData'
        request:
          $ref: '#/components/schemas/UserRequest'
        status:
          $ref: '#/components/schemas/Status'
        type:
          type: string
          description: |
            Type of the response.
            Indicates the nature or category of the API response.

    SomeData:
      type: object
      description: |
        Contains specific data returned by the API.
        Example: identifiers, resource details, etc.
      properties:
        id:
          type: string
          description: |
            Unique identifier for the resource.
            This is generated upon creation.

    Status:
      type: object
      description: |
        Represents the status of the response.
        Includes status code and message for the operation.
      properties:
        code:
          type: integer
          description: |
            Numeric status code indicating the result of the operation.
            Follows standard HTTP status conventions.
        message:
          type: string
          description: |
            Human-readable status message.
            Provides additional information about the response.

  securitySchemes:
    XAPIKey:
      type: apiKey
      in: header
      name: X-API-Key
      description: |
        API key for authenticating requests.
        Provide this key in the request header as "X-API-Key".
    XAPISecret:
      type: apiKey
      in: header
      name: X-API-Secret
      description: |
        API secret for authenticating requests.
        Provide this secret in the request header as "X-API-Secret".
