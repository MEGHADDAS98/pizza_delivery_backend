Awesome! Now let’s make your course cards **interactive** by:

---

## ✅ Step 6: Add **Add to Cart** and **Add to Wishlist** Buttons

We’ll also prepare to connect this to a shared cart/wishlist state next.

---

### 🧱 1. **Update `CourseCard.tsx`**

We’ll add two buttons and props to handle adding to cart/wishlist.

Update `CourseCard.tsx` to:

```tsx
import { Course } from '../types/Course';
import './CourseCard.css';

interface Props {
  course: Course;
  onAddToCart?: (course: Course) => void;
  onAddToWishlist?: (course: Course) => void;
  isWishlisted?: boolean;
}

function CourseCard({ course, onAddToCart, onAddToWishlist, isWishlisted }: Props) {
  return (
    <div className="course-card">
      <img src={course.image} alt={course.title} />
      <h3>{course.title}</h3>
      <p>By {course.author}</p>
      <p>{course.description}</p>
      <p>
        {course.discountedPrice ? (
          <>
            <span className="strike">₹{course.price}</span>
            <span className="discount"> ₹{course.discountedPrice}</span>
          </>
        ) : (
          <>₹{course.price}</>
        )}
      </p>
      <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px' }}>
        <button onClick={() => onAddToCart?.(course)}>Add to Cart</button>
        <button onClick={() => onAddToWishlist?.(course)}>
          {isWishlisted ? '★' : '☆'}
        </button>
      </div>
    </div>
  );
}

export default CourseCard;
```

---

### 🎨 2. Optional Styling: Update `CourseCard.css`

```css
.course-card button {
  padding: 0.4rem 0.8rem;
  font-size: 0.9rem;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  background-color: #004aad;
  color: white;
}

.course-card button:hover {
  background-color: #00367a;
}
```

---

### 📄 3. **Update `Home.tsx` to handle click events**

We'll **log** to the console for now (later we’ll wire it to context).

Update `Home.tsx`:

```tsx
import { useEffect, useState } from 'react';
import CourseCard from '../components/CourseCard';
import { Course } from '../types/Course';
import courseData from '../data/courses.json';

function Home() {
  const [courses, setCourses] = useState<Course[]>([]);
  const [wishlist, setWishlist] = useState<string[]>([]);

  useEffect(() => {
    setCourses(courseData);
  }, []);

  const handleAddToCart = (course: Course) => {
    console.log(`Added to Cart: ${course.title}`);
    // Later: add to CartContext
  };

  const handleAddToWishlist = (course: Course) => {
    if (wishlist.includes(course.id)) return;
    setWishlist(prev => [...prev, course.id]);
    console.log(`Added to Wishlist: ${course.title}`);
  };

  return (
    <div>
      <h2>Discover Latest Courses on React</h2>
      <div style={{ display: 'flex', flexWrap: 'wrap' }}>
        {courses.map(course => (
          <CourseCard
            key={course.id}
            course={course}
            onAddToCart={handleAddToCart}
            onAddToWishlist={handleAddToWishlist}
            isWishlisted={wishlist.includes(course.id)}
          />
        ))}
      </div>
    </div>
  );
}

export default Home;
```

---

### ✅ Now test in the browser:

1. Click **“Add to Cart”** → check console log (F12 → Console)
2. Click **star button** → changes to filled star (`★`)
3. Try clicking again → doesn’t duplicate wishlist (guarded)
4. Visual confirmation ✅ — buttons are working

---

## 🔜 What’s Next?

Now we’ll:

* Create **CartContext** and **WishlistContext**
* Store cart/wishlist globally (so you can access from any page!)
* Show a **cart widget** with total price

Shall we set up `CartContext` next?
