Perfect! Now let's move to:

---

## ✅ Step 5: Create `courses.json` & Display Courses on Home Page

You’ll:

* Add **mock course data**
* Create a **CourseCard** component
* Render the list on the **Home page**

---

### 📁 1. **Create a new folder** inside `src/` called:

```
data
```

Inside `src/data/`, create a file:

```
courses.json
```

---

### 🧾 2. **Paste this sample JSON into `courses.json`:**

```json
[
  {
    "id": "1",
    "title": "Complete React Developer Course",
    "author": "Andrew Mead",
    "tags": ["react", "frontend", "developer"],
    "description": "Learn to build responsive React apps.",
    "price": 999,
    "discountedPrice": 499,
    "image": "https://via.placeholder.com/150",
    "isOnSale": true,
    "saleEndsAt": "2025-07-01T23:59:59Z"
  },
  {
    "id": "2",
    "title": "Mastering HTML & CSS",
    "author": "Angela Yu",
    "tags": ["html", "css", "web"],
    "description": "Build websites using HTML5 and CSS3.",
    "price": 799,
    "image": "https://via.placeholder.com/150"
  }
]
```

---

### 🧱 3. **Create CourseCard Component**

📁 Inside `src/components/`, create:

```
CourseCard.tsx
```

Paste this code:

```tsx
import { Course } from '../types/Course';
import './CourseCard.css';

interface Props {
  course: Course;
}

function CourseCard({ course }: Props) {
  return (
    <div className="course-card">
      <img src={course.image} alt={course.title} />
      <h3>{course.title}</h3>
      <p>By {course.author}</p>
      <p>{course.description}</p>
      <p>
        {course.discountedPrice ? (
          <>
            <span className="strike">₹{course.price}</span>
            <span className="discount"> ₹{course.discountedPrice}</span>
          </>
        ) : (
          <>₹{course.price}</>
        )}
      </p>
    </div>
  );
}

export default CourseCard;
```

---

### 🎨 Create `CourseCard.css` for basic style

📁 Create `CourseCard.css` in the same folder and paste:

```css
.course-card {
  border: 1px solid #ddd;
  border-radius: 10px;
  padding: 1rem;
  width: 250px;
  font-family: 'Montserrat', sans-serif;
  margin: 1rem;
}

.course-card img {
  width: 100%;
  height: 150px;
  object-fit: cover;
}

.strike {
  text-decoration: line-through;
  color: gray;
  margin-right: 8px;
}

.discount {
  color: green;
  font-weight: bold;
}
```

---

### 📄 4. **Update `Home.tsx` to display courses**

Open `src/pages/Home.tsx` and replace it with:

```tsx
import { useEffect, useState } from 'react';
import CourseCard from '../components/CourseCard';
import { Course } from '../types/Course';
import courseData from '../data/courses.json';

function Home() {
  const [courses, setCourses] = useState<Course[]>([]);

  useEffect(() => {
    setCourses(courseData);
  }, []);

  return (
    <div>
      <h2>Discover Latest Courses on React</h2>
      <div style={{ display: 'flex', flexWrap: 'wrap' }}>
        {courses.map(course => (
          <CourseCard key={course.id} course={course} />
        ))}
      </div>
    </div>
  );
}

export default Home;
```

---

### ✅ Now Test It:

1. Run your app (or it’ll auto-refresh):

   ```
   npm start
   ```
2. Go to `http://localhost:3000`
3. You should see 2 nice course cards rendered 🎉

---

Let me know once you're done and seeing the courses — and next we’ll:

* Add buttons: ⭐ Add to Wishlist, 🛒 Add to Cart
* Start building Wishlist and Cart logic using Context API

Ready for that?
